"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[385],{44197:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>y,contentTitle:()=>m,default:()=>f,frontMatter:()=>d,metadata:()=>h,toc:()=>v});var s=a(87462),r=(a(67294),a(3905)),i=a(26389),n=a(94891),o=a(75190),c=a(47507),p=a(24310),l=a(63303),u=(a(75035),a(85162));const d={id:"access-requests-projects-approve-put",title:"Approves access for the authenticated user to a project",description:"Approves access for the authenticated user to a project",sidebar_label:"Approves access for the authenticated user to a project",hide_title:!0,hide_table_of_contents:!0,api:{description:"Approves access for the authenticated user to a project",operationId:"accessRequestsProjectsApprove_put",tags:["access_requests"],parameters:[{name:"id",in:"path",description:"The ID or URL-encoded path of the project owned by the authenticated user.",required:!0,schema:{oneOf:[{type:"integer"},{type:"string"}]}},{name:"user_id",in:"path",description:"The userID of the access requester",required:!0,schema:{type:"integer"}},{name:"access_level",in:"query",description:"A valid project access level.  0 = no access , 10 = guest, 20 = reporter, 30 = developer, 40 = Maintainer.  Default is 30.'",required:!1,schema:{enum:[0,10,20,30,40],default:30,type:"integer"}}],responses:{200:{description:"Successful operation",content:{"application/json":{schema:{title:"ProjectAccessApprove",type:"object",properties:{id:{type:"integer"},usename:{type:"string"},name:{type:"string"},state:{type:"string"},created_at:{type:"string"},access_level:{type:"integer"}}},example:{id:1,username:"raymond_smith",name:"Raymond Smith",state:"active",created_at:"2012-10-22T14:13:35Z",access_level:20}}}},401:{description:"Unauthorized operation"}},method:"put",path:"/v4/projects/{id}/access_requests/{user_id}/approve",servers:[{url:"https://gitlab.com/api/"}],security:[{ApiKeyAuth:[]}],securitySchemes:{ApiKeyAuth:{type:"apiKey",in:"header",name:"Private-Token"}},info:{description:"An OpenAPI definition for the GitLab REST API.\nFew API resources or endpoints are currently included.\nThe intent is to expand this to match the entire Markdown documentation of the API:\n<https://docs.gitlab.com/ee/api/>. Contributions are welcome.\n\nWhen viewing this on gitlab.com, you can test API calls directly from the browser\nagainst the `gitlab.com` instance, if you are logged in.\nThe feature uses the current [GitLab session cookie](https://docs.gitlab.com/ee/api/index.html#session-cookie),\nso each request is made using your account.\n\nInstructions for using this tool can be found in [Interactive API Documentation](openapi_interactive.md).\n",version:"v4",title:"GitLab API",termsOfService:"https://about.gitlab.com/terms/",license:{name:"CC BY-SA 4.0",url:"https://gitlab.com/gitlab-org/gitlab/-/blob/master/LICENSE"}},postman:{name:"Approves access for the authenticated user to a project",description:{content:"Approves access for the authenticated user to a project",type:"text/plain"},url:{path:["v4","projects",":id","access_requests",":user_id","approve"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"A valid project access level.  0 = no access , 10 = guest, 20 = reporter, 30 = developer, 40 = Maintainer.  Default is 30.'",type:"text/plain"},key:"access_level",value:""}],variable:[{disabled:!1,description:{content:"(Required) The ID or URL-encoded path of the project owned by the authenticated user.",type:"text/plain"},type:"any",value:"",key:"id"},{disabled:!1,description:{content:"(Required) The userID of the access requester",type:"text/plain"},type:"any",value:"",key:"user_id"}]},header:[{key:"Accept",value:"application/json"}],method:"PUT"}},sidebar_class_name:"put api-method",info_path:"sumin/gitlab/gitlab-api",custom_edit_url:null},m=void 0,h={unversionedId:"sumin/gitlab/access-requests-projects-approve-put",id:"sumin/gitlab/access-requests-projects-approve-put",title:"Approves access for the authenticated user to a project",description:"Approves access for the authenticated user to a project",source:"@site/docs/sumin/gitlab/access-requests-projects-approve-put.api.mdx",sourceDirName:"sumin/gitlab",slug:"/sumin/gitlab/access-requests-projects-approve-put",permalink:"/sumin/gitlab/access-requests-projects-approve-put",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"access-requests-projects-approve-put",title:"Approves access for the authenticated user to a project",description:"Approves access for the authenticated user to a project",sidebar_label:"Approves access for the authenticated user to a project",hide_title:!0,hide_table_of_contents:!0,api:{description:"Approves access for the authenticated user to a project",operationId:"accessRequestsProjectsApprove_put",tags:["access_requests"],parameters:[{name:"id",in:"path",description:"The ID or URL-encoded path of the project owned by the authenticated user.",required:!0,schema:{oneOf:[{type:"integer"},{type:"string"}]}},{name:"user_id",in:"path",description:"The userID of the access requester",required:!0,schema:{type:"integer"}},{name:"access_level",in:"query",description:"A valid project access level.  0 = no access , 10 = guest, 20 = reporter, 30 = developer, 40 = Maintainer.  Default is 30.'",required:!1,schema:{enum:[0,10,20,30,40],default:30,type:"integer"}}],responses:{200:{description:"Successful operation",content:{"application/json":{schema:{title:"ProjectAccessApprove",type:"object",properties:{id:{type:"integer"},usename:{type:"string"},name:{type:"string"},state:{type:"string"},created_at:{type:"string"},access_level:{type:"integer"}}},example:{id:1,username:"raymond_smith",name:"Raymond Smith",state:"active",created_at:"2012-10-22T14:13:35Z",access_level:20}}}},401:{description:"Unauthorized operation"}},method:"put",path:"/v4/projects/{id}/access_requests/{user_id}/approve",servers:[{url:"https://gitlab.com/api/"}],security:[{ApiKeyAuth:[]}],securitySchemes:{ApiKeyAuth:{type:"apiKey",in:"header",name:"Private-Token"}},info:{description:"An OpenAPI definition for the GitLab REST API.\nFew API resources or endpoints are currently included.\nThe intent is to expand this to match the entire Markdown documentation of the API:\n<https://docs.gitlab.com/ee/api/>. Contributions are welcome.\n\nWhen viewing this on gitlab.com, you can test API calls directly from the browser\nagainst the `gitlab.com` instance, if you are logged in.\nThe feature uses the current [GitLab session cookie](https://docs.gitlab.com/ee/api/index.html#session-cookie),\nso each request is made using your account.\n\nInstructions for using this tool can be found in [Interactive API Documentation](openapi_interactive.md).\n",version:"v4",title:"GitLab API",termsOfService:"https://about.gitlab.com/terms/",license:{name:"CC BY-SA 4.0",url:"https://gitlab.com/gitlab-org/gitlab/-/blob/master/LICENSE"}},postman:{name:"Approves access for the authenticated user to a project",description:{content:"Approves access for the authenticated user to a project",type:"text/plain"},url:{path:["v4","projects",":id","access_requests",":user_id","approve"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"A valid project access level.  0 = no access , 10 = guest, 20 = reporter, 30 = developer, 40 = Maintainer.  Default is 30.'",type:"text/plain"},key:"access_level",value:""}],variable:[{disabled:!1,description:{content:"(Required) The ID or URL-encoded path of the project owned by the authenticated user.",type:"text/plain"},type:"any",value:"",key:"id"},{disabled:!1,description:{content:"(Required) The userID of the access requester",type:"text/plain"},type:"any",value:"",key:"user_id"}]},header:[{key:"Accept",value:"application/json"}],method:"PUT"}},sidebar_class_name:"put api-method",info_path:"sumin/gitlab/gitlab-api",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Requests access for the authenticated user to a group",permalink:"/sumin/gitlab/access-requests-groups-post"},next:{title:"List access requests for a project",permalink:"/sumin/gitlab/access-requests-projects-get"}},y={},v=[{value:"Approves access for the authenticated user to a project",id:"approves-access-for-the-authenticated-user-to-a-project",level:2}],g={toc:v},b="wrapper";function f(e){let{components:t,...a}=e;return(0,r.kt)(b,(0,s.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"approves-access-for-the-authenticated-user-to-a-project"},"Approves access for the authenticated user to a project"),(0,r.kt)("p",null,"Approves access for the authenticated user to a project"),(0,r.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"Path Parameters")),(0,r.kt)("div",null,(0,r.kt)("ul",null,(0,r.kt)(o.Z,{className:"paramsItem",param:{name:"id",in:"path",description:"The ID or URL-encoded path of the project owned by the authenticated user.",required:!0,schema:{oneOf:[{type:"integer"},{type:"string"}]}},mdxType:"ParamsItem"}),(0,r.kt)(o.Z,{className:"paramsItem",param:{name:"user_id",in:"path",description:"The userID of the access requester",required:!0,schema:{type:"integer"}},mdxType:"ParamsItem"})))),(0,r.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"Query Parameters")),(0,r.kt)("div",null,(0,r.kt)("ul",null,(0,r.kt)(o.Z,{className:"paramsItem",param:{name:"access_level",in:"query",description:"A valid project access level.  0 = no access , 10 = guest, 20 = reporter, 30 = developer, 40 = Maintainer.  Default is 30.'",required:!1,schema:{enum:[0,10,20,30,40],default:30,type:"integer"}},mdxType:"ParamsItem"})))),(0,r.kt)("div",null,(0,r.kt)(i.Z,{mdxType:"ApiTabs"},(0,r.kt)(u.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"Successful operation")),(0,r.kt)("div",null,(0,r.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(u.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)(l.Z,{mdxType:"SchemaTabs"},(0,r.kt)(u.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(p.Z,{collapsible:!1,name:"id",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"usename",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"state",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"created_at",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,r.kt)(p.Z,{collapsible:!1,name:"access_level",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer"},mdxType:"SchemaItem"})))),(0,r.kt)(u.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(c.Z,{responseExample:'{\n  "id": 0,\n  "usename": "string",\n  "name": "string",\n  "state": "string",\n  "created_at": "string",\n  "access_level": 0\n}',language:"json",mdxType:"ResponseSamples"})),(0,r.kt)(u.Z,{label:"Example",value:"Example",mdxType:"TabItem"},(0,r.kt)(c.Z,{responseExample:'{\n  "id": 1,\n  "username": "raymond_smith",\n  "name": "Raymond Smith",\n  "state": "active",\n  "created_at": "2012-10-22T14:13:35Z",\n  "access_level": 20\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,r.kt)(u.Z,{label:"401",value:"401",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"Unauthorized operation")),(0,r.kt)("div",null)))))}f.isMDXComponent=!0}}]);