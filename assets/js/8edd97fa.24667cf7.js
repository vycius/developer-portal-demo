"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[8e3],{79156:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>g,contentTitle:()=>u,default:()=>q,frontMatter:()=>d,metadata:()=>h,toc:()=>y});var a=s(87462),i=(s(67294),s(3905)),n=s(26389),r=s(94891),o=s(75190),c=s(47507),p=s(24310),l=s(63303),m=(s(75035),s(85162));const d={id:"access-requests-projects-get",title:"List access requests for a project",description:"Lists access requests for a project",sidebar_label:"List access requests for a project",hide_title:!0,hide_table_of_contents:!0,api:{description:"Lists access requests for a project",operationId:"accessRequestsProjects_get",tags:["access_requests"],parameters:[{name:"id",in:"path",description:"The ID or URL-encoded path of the project owned by the authenticated user.",required:!0,schema:{oneOf:[{type:"integer"},{type:"string"}]}}],responses:{200:{description:"Successful operation",content:{"application/json":{schema:{title:"ProjectAccessResponse",type:"object",properties:{id:{type:"integer"},usename:{type:"string"},name:{type:"string"},state:{type:"string"},created_at:{type:"string"},requested_at:{type:"string"}}},example:[{id:1,username:"raymond_smith",name:"Raymond Smith",state:"active",created_at:"2012-10-22T14:13:35Z",requested_at:"2012-10-22T14:13:35Z"},{id:2,username:"john_doe",name:"John Doe",state:"active",created_at:"2012-10-22T14:13:35Z",requested_at:"2012-10-22T14:13:35Z"}]}}},401:{description:"Unauthorized operation"}},method:"get",path:"/v4/projects/{id}/access_requests",servers:[{url:"https://gitlab.com/api/"}],security:[{ApiKeyAuth:[]}],securitySchemes:{ApiKeyAuth:{type:"apiKey",in:"header",name:"Private-Token"}},info:{description:"An OpenAPI definition for the GitLab REST API.\nFew API resources or endpoints are currently included.\nThe intent is to expand this to match the entire Markdown documentation of the API:\n<https://docs.gitlab.com/ee/api/>. Contributions are welcome.\n\nWhen viewing this on gitlab.com, you can test API calls directly from the browser\nagainst the `gitlab.com` instance, if you are logged in.\nThe feature uses the current [GitLab session cookie](https://docs.gitlab.com/ee/api/index.html#session-cookie),\nso each request is made using your account.\n\nInstructions for using this tool can be found in [Interactive API Documentation](openapi_interactive.md).\n",version:"v4",title:"GitLab API",termsOfService:"https://about.gitlab.com/terms/",license:{name:"CC BY-SA 4.0",url:"https://gitlab.com/gitlab-org/gitlab/-/blob/master/LICENSE"}},postman:{name:"List access requests for a project",description:{content:"Lists access requests for a project",type:"text/plain"},url:{path:["v4","projects",":id","access_requests"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) The ID or URL-encoded path of the project owned by the authenticated user.",type:"text/plain"},type:"any",value:"",key:"id"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"sumin/gitlab/gitlab-api",custom_edit_url:null},u=void 0,h={unversionedId:"sumin/gitlab/access-requests-projects-get",id:"sumin/gitlab/access-requests-projects-get",title:"List access requests for a project",description:"Lists access requests for a project",source:"@site/docs/sumin/gitlab/access-requests-projects-get.api.mdx",sourceDirName:"sumin/gitlab",slug:"/sumin/gitlab/access-requests-projects-get",permalink:"/sumin/gitlab/access-requests-projects-get",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"access-requests-projects-get",title:"List access requests for a project",description:"Lists access requests for a project",sidebar_label:"List access requests for a project",hide_title:!0,hide_table_of_contents:!0,api:{description:"Lists access requests for a project",operationId:"accessRequestsProjects_get",tags:["access_requests"],parameters:[{name:"id",in:"path",description:"The ID or URL-encoded path of the project owned by the authenticated user.",required:!0,schema:{oneOf:[{type:"integer"},{type:"string"}]}}],responses:{200:{description:"Successful operation",content:{"application/json":{schema:{title:"ProjectAccessResponse",type:"object",properties:{id:{type:"integer"},usename:{type:"string"},name:{type:"string"},state:{type:"string"},created_at:{type:"string"},requested_at:{type:"string"}}},example:[{id:1,username:"raymond_smith",name:"Raymond Smith",state:"active",created_at:"2012-10-22T14:13:35Z",requested_at:"2012-10-22T14:13:35Z"},{id:2,username:"john_doe",name:"John Doe",state:"active",created_at:"2012-10-22T14:13:35Z",requested_at:"2012-10-22T14:13:35Z"}]}}},401:{description:"Unauthorized operation"}},method:"get",path:"/v4/projects/{id}/access_requests",servers:[{url:"https://gitlab.com/api/"}],security:[{ApiKeyAuth:[]}],securitySchemes:{ApiKeyAuth:{type:"apiKey",in:"header",name:"Private-Token"}},info:{description:"An OpenAPI definition for the GitLab REST API.\nFew API resources or endpoints are currently included.\nThe intent is to expand this to match the entire Markdown documentation of the API:\n<https://docs.gitlab.com/ee/api/>. Contributions are welcome.\n\nWhen viewing this on gitlab.com, you can test API calls directly from the browser\nagainst the `gitlab.com` instance, if you are logged in.\nThe feature uses the current [GitLab session cookie](https://docs.gitlab.com/ee/api/index.html#session-cookie),\nso each request is made using your account.\n\nInstructions for using this tool can be found in [Interactive API Documentation](openapi_interactive.md).\n",version:"v4",title:"GitLab API",termsOfService:"https://about.gitlab.com/terms/",license:{name:"CC BY-SA 4.0",url:"https://gitlab.com/gitlab-org/gitlab/-/blob/master/LICENSE"}},postman:{name:"List access requests for a project",description:{content:"Lists access requests for a project",type:"text/plain"},url:{path:["v4","projects",":id","access_requests"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) The ID or URL-encoded path of the project owned by the authenticated user.",type:"text/plain"},type:"any",value:"",key:"id"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"sumin/gitlab/gitlab-api",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Approves access for the authenticated user to a project",permalink:"/sumin/gitlab/access-requests-projects-approve-put"},next:{title:"Requests access for the authenticated user to a project",permalink:"/sumin/gitlab/access-requests-projects-post"}},g={},y=[{value:"List access requests for a project",id:"list-access-requests-for-a-project",level:2}],b={toc:y},f="wrapper";function q(e){let{components:t,...s}=e;return(0,i.kt)(f,(0,a.Z)({},b,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"list-access-requests-for-a-project"},"List access requests for a project"),(0,i.kt)("p",null,"Lists access requests for a project"),(0,i.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"Path Parameters")),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)(o.Z,{className:"paramsItem",param:{name:"id",in:"path",description:"The ID or URL-encoded path of the project owned by the authenticated user.",required:!0,schema:{oneOf:[{type:"integer"},{type:"string"}]}},mdxType:"ParamsItem"})))),(0,i.kt)("div",null,(0,i.kt)(n.Z,{mdxType:"ApiTabs"},(0,i.kt)(m.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"Successful operation")),(0,i.kt)("div",null,(0,i.kt)(r.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(m.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(l.Z,{mdxType:"SchemaTabs"},(0,i.kt)(m.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(p.Z,{collapsible:!1,name:"id",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"usename",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"state",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"created_at",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"requested_at",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))),(0,i.kt)(m.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(c.Z,{responseExample:'{\n  "id": 0,\n  "usename": "string",\n  "name": "string",\n  "state": "string",\n  "created_at": "string",\n  "requested_at": "string"\n}',language:"json",mdxType:"ResponseSamples"})),(0,i.kt)(m.Z,{label:"Example",value:"Example",mdxType:"TabItem"},(0,i.kt)(c.Z,{responseExample:'[\n  {\n    "id": 1,\n    "username": "raymond_smith",\n    "name": "Raymond Smith",\n    "state": "active",\n    "created_at": "2012-10-22T14:13:35Z",\n    "requested_at": "2012-10-22T14:13:35Z"\n  },\n  {\n    "id": 2,\n    "username": "john_doe",\n    "name": "John Doe",\n    "state": "active",\n    "created_at": "2012-10-22T14:13:35Z",\n    "requested_at": "2012-10-22T14:13:35Z"\n  }\n]',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.kt)(m.Z,{label:"401",value:"401",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"Unauthorized operation")),(0,i.kt)("div",null)))))}q.isMDXComponent=!0}}]);